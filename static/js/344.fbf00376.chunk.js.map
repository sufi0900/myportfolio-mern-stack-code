{"version":3,"file":"static/js/344.fbf00376.chunk.js","mappings":"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","sources":["Componenet/AnimatedProgressProvider.js","Componenet/SkillCard.js"],"sourcesContent":["import React from 'react';\nimport {Animate} from 'react-move';\n\nclass AnimatedProgressProvider extends React.Component {\n  interval = undefined;\n\n  state = {\n    isAnimated: false,\n  };\n\n  static defaultProps = {\n    valueStart: 0,\n  };\n\n  componentDidMount() {\n    if (this.props.repeat) {\n      this.interval = window.setInterval(() => {\n        this.setState({\n          isAnimated: !this.state.isAnimated,\n        });\n      }, this.props.duration * 1000);\n    } else {\n      this.setState({\n        isAnimated: !this.state.isAnimated,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <Animate\n        start={() => ({\n          value: this.props.valueStart,\n        })}\n        update={() => ({\n          value: [\n            this.state.isAnimated ? this.props.valueEnd : this.props.valueStart,\n          ],\n          timing: {\n            duration: this.props.duration * 1000,\n            ease: this.props.easingFunction,\n          },\n        })}\n      >\n        {({value}) => this.props.children(value)}\n      </Animate>\n    );\n  }\n}\n\nexport default AnimatedProgressProvider;\n","import React from \"react\";\n\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemAvatar from \"@mui/material/ListItemAvatar\";\n\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport Card from \"@mui/material/Card\";\n\nimport Avatar from \"@mui/material/Avatar\";\n\nimport Typography from \"@mui/material/Typography\";\n\nimport \"./css/imagehover.min.css\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@mui/material/Grid\";\nimport {\n  CircularProgressbarWithChildren,\n  buildStyles,\n} from \"react-circular-progressbar\";\nimport { easeQuadInOut } from \"d3-ease\";\nimport AnimatedProgressProvider from \"./AnimatedProgressProvider\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { motion } from \"framer-motion\";\nconst SkillCard = ({ imageFile, title, percentage, _id }) => {\n  AOS.init();\n\n  const progress = {\n    width: \"100%\",\n  };\n  const h5 = {\n    color: \"black\",\n    textDecoration: \"underline\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      color: \"blue\",\n    },\n  };\n  return (\n    <>\n      <>\n        <style type=\"text/css\">\n          {`   \n.btns {\nbackground-color: red;\ncolor: white;\n}\n\n.btn-xxl {\npadding: 1rem 1.5rem;\nfont-size: 1.5rem;\n}\n.btn-secondary{       background-color: pink;}\n.progress-bar{  background-color: rgb(255, 2, 204);  }\n.progress{\n  background-color: white;\n}\n\n\n}\n\n`}\n        </style>\n      </>\n      <br></br>\n      <br></br>\n\n      <Grid\n        item\n        lg={4}\n        sm={6}\n        xl={3}\n        md={4}\n        xs={12}\n        sx={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          textAlign: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <motion.div\n          initial=\"hidden\"\n          whileInView=\"visible\"\n          // animate={{ rotate: 360 }}\n          // viewport={{ once: true }}\n          transition={{\n            duration: 0.5,\n          }}\n          variants={{\n            visible: { opacity: 1, scale: 1, y: 1 },\n            hidden: { opacity: 0, scale: 0.5, y: -100 },\n          }}\n        >\n          <Card\n            sx={{\n              width: \"270px\",\n              backgroundImage:\n                \"linear-gradient(\\n    90deg,\\n    rgba(78, 78, 246, 0.647) 0%,\\n    rgba(247, 90, 216, 0.696) 100%\\n  )\",\n              borderRadius: \"12%\",\n              transition: \"0.2s\",\n              padding: \"7px\",\n              boxShadow:\n                \"rgba(14, 30, 37, 0.12) 0px 2px 4px 0px, rgba(14, 30, 37, 0.32) 0px 2px 16px 0px\",\n            }}\n          >\n            <div className=\"About3\">\n              {\" \"}\n              <h3> {title}</h3>\n            </div>\n            <AnimatedProgressProvider\n              valueStart={1}\n              valueEnd={percentage}\n              duration={1.4}\n              easingFunction={easeQuadInOut}\n            >\n              {(percentage) => {\n                const roundedpercentage = Math.round(percentage);\n                return (\n                  <CircularProgressbarWithChildren\n                    value={roundedpercentage}\n                    styles={buildStyles({\n                      textColor: \"black\",\n                      pathColor: \"rgb(255, 2, 204)\",\n                      border: \"1px solid black\",\n                      trailColor: \"white\",\n                      pathTransition: \"none\",\n                    })}\n                    style={{ overflow: \"hidden\" }}\n                  >\n                    <img\n                      style={{\n                        width: \"100px\",\n                        height: \"100px\",\n\n                        textAlign: \"center\",\n                        overflow: \"hidden\",\n                        borderRadius: \"50%\",\n                      }}\n                      src={imageFile}\n                      alt=\"sufi\"\n                      loading=\"lazy\"\n                    />\n                    <div style={{ fontSize: 12 }}>\n                      <Typography\n                        sx={{\n                          fontSize: \"26px\",\n                          color: \"black\",\n                          marginBottom: \"20px\",\n                        }}\n                      >\n                        {`${roundedpercentage}%`}\n                      </Typography>\n                    </div>\n                  </CircularProgressbarWithChildren>\n                );\n              }}\n            </AnimatedProgressProvider>{\" \"}\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar\n                  style={{\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                    width: \"60px\", // Adjust the width as needed\n                    height: \"60px\", // Maintain a square aspect\n                    background: \"none\",\n                  }}\n                >\n                  <img\n                    className=\"i-swing\"\n                    src={imageFile}\n                    alt=\"\"\n                    style={{ width: \"100%\", height: \"auto\" }}\n                  />\n                </Avatar>\n              </ListItemAvatar>\n              <ProgressBar\n                animated\n                now={percentage}\n                style={progress}\n                label={`${percentage}%`}\n              />\n            </ListItem>\n            <Link to={`/skill/${_id}`}>\n              <Typography variant=\"h5\" sx={h5}>\n                Read More..\n              </Typography>\n            </Link>\n          </Card>\n        </motion.div>\n      </Grid>\n    </>\n  );\n};\n\nexport default SkillCard;\n"],"names":["AnimatedProgressProvider","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","interval","undefined","state","isAnimated","_createClass","key","value","_this2","this","props","repeat","window","setInterval","setState","duration","clearInterval","_this3","_jsx","Animate","start","valueStart","update","valueEnd","timing","ease","easingFunction","children","_ref","React","defaultProps","imageFile","title","percentage","_id","AOS","_jsxs","_Fragment","type","Grid","item","lg","sm","xl","md","xs","sx","display","justifyContent","textAlign","alignItems","motion","div","initial","whileInView","transition","variants","visible","opacity","scale","y","hidden","Card","width","backgroundImage","borderRadius","padding","boxShadow","className","easeQuadInOut","roundedpercentage","Math","round","CircularProgressbarWithChildren","styles","buildStyles","textColor","pathColor","border","trailColor","pathTransition","style","overflow","height","src","alt","loading","fontSize","Typography","color","marginBottom","ListItem","ListItemAvatar","Avatar","backgroundSize","backgroundPosition","background","ProgressBar","animated","now","label","Link","to","variant","textDecoration","cursor"],"sourceRoot":""}